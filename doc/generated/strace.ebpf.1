.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "strace" "1" "pmem Tools version 1.0.2" "" "" ""
.hy
.\" Copyright 2014-2016, Intel Corporation
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\"     * Redistributions of source code must retain the above copyright
.\"       notice, this list of conditions and the following disclaimer.
.\"
.\"     * Redistributions in binary form must reproduce the above copyright
.\"       notice, this list of conditions and the following disclaimer in
.\"       the documentation and/or other materials provided with the
.\"       distribution.
.\"
.\"     * Neither the name of the copyright holder nor the names of its
.\"       contributors may be used to endorse or promote products derived
.\"       from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
.\" A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
.\" OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
.\" LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
.\" OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.SH NAME
.PP
\f[B]strace.ebpf\f[] \-\- extreamely fast strace\-like tool builded on
top of eBPF and KProbe technologies.
.SH SYNOPSIS
.IP
.nf
\f[C]
$\ strace.ebpf\ [options]\ [command\ [arg\ ...]]
\f[]
.fi
.SH DESCRIPTION
.PP
strace.ebpf is a limited functional strace equivalent for Linux but
based on eBPF and KProbe technologies and libbcc library.
.IP \[bu] 2
Pros:
.RS 2
.IP \[bu] 2
Used combination of technologies allow tool to be about one order faster
than regular system strace.
.IP \[bu] 2
This tool consume much less amount of CPU resource
.IP \[bu] 2
Output of this tool is designed to be suiteable for processing with
classical tools and technologies, like awk.
.IP \[bu] 2
Could trace syscalls system\-wide.
.RE
.IP \[bu] 2
Cons:
.RS 2
.IP \[bu] 2
Limited functionality
.IP \[bu] 2
Slow attaching and detaching
.IP \[bu] 2
Asyncronity.
If user will not provide enough system resources for performace tool
will skip some calls.
Tool does not assume to try any work\-around behind the scene.
.RE
.PP
WARNING: System\-wide tracing can fill out your disk really fast.
.SH OPTIONS
.PP
\f[C]\-t,\ \-\-timestamp\f[]
.PP
include timestamp in output
.PP
\f[C]\-X,\ \-\-failed\f[]
.PP
only show failed syscalls
.PP
\f[C]\-d,\ \-\-debug\f[]
.PP
enable debug output
.PP
\f[C]\-p,\ \-\-pid\f[]
.PP
this PID only.
Command arg should be missing
.PP
\f[C]\-o,\ \-\-output\f[]
.PP
filename
.PP
\f[C]\-l,\ \-\-format\f[]
.PP
output logs format.
Possible values:
.IP
.nf
\f[C]
\[aq]bin\[aq],\ \[aq]binary\[aq],\ \[aq]hex\[aq],\ \[aq]strace\[aq],\ \[aq]list\[aq]\ &\ \[aq]help\[aq].
\f[]
.fi
.PP
\[aq]bin\[aq]/\[aq]binary\[aq] file format is described in generated
trace.h.
If current directory is not writable generating is skipped.
.PP
Default: \[aq]hex\[aq]
.PP
\f[C]\-K,\ \-\-hex\-separator\f[]
.PP
set field separator for hex logs.
Default is \[aq]\[aq].
.PP
\f[C]\-e,\ \-\-expr\f[]
.PP
expression, \[aq]help\[aq] or \[aq]list\[aq] for supported list.
.PP
Default: trace=kp\-kern\-all.
.PP
\f[C]\-L,\ \-\-list\f[]
.PP
Print a list of all traceable syscalls of the running kernel.
.PP
\f[C]\-R,\ \-\-ll\-list\f[]
.PP
Print a list of all traceable low\-level funcs of the running kernel.
.PP
WARNING: really long.
~45000 functions for 4.4 kernel.
.PP
\f[C]\-b,\ \-\-builtin\-list\f[]
.PP
Print a list of all syscalls known by glibc.
.PP
\f[C]\-h,\ \-\-help\f[]
.PP
print help
.SH CONFIGURATION
.PP
** System Configuring **
.IP "1." 3
You should provide permissions to access tracefs for final user.
.IP "2." 3
It\[aq]s good to put this command in init scripts such as local.rc:
.RS 4
.PP
echo 1 > /proc/sys/net/core/bpf_jit_enable
.PP
It will significantly improve performance and avoid \[aq]Lost
events\[aq]
.RE
.IP "3." 3
You should increase "Open File Limit", for example according to this
instruction:
.RS 4
.PP
https://easyengine.io/tutorials/linux/increase\-open\-files\-limit/
.RE
.SH FILES
.PP
Putting into current directory following files allow to customize eBPF
code for supporting more newer eBPF VM features in newer kernels.
Also if current directory does not contain trace.h strace.ebpf on first
start saves built\-in trace.h into current directory.
Saved built\-in describe binary log\[aq]s format.
.IP \[bu] 2
trace.h
.IP \[bu] 2
trace_head.c
.IP \[bu] 2
trace_tp_all.c
.IP \[bu] 2
trace_kern_tmpl.c
.IP \[bu] 2
trace_libc_tmpl.c
.IP \[bu] 2
trace_file_tmpl.c
.IP \[bu] 2
trace_fileat_tmpl.c
.SH EXAMPLES
.SH Example output:
.PP
# ./strace.ebpf \-l hex
.PP
\&./strace.ebpf \-l hex PID ERR RES SYSCALL ARG1 ARG2 ARG3 AUX_DATA
0000000000000AFD 000000000000000B FFFFFFFFFFFFFFFF read 0000000000000005
0000000000000427 0000000000000000 0000000000000020 read 000000000000000A
0000000000000B3D 0000000000000000 0000000000000001 write
000000000000001C 0000000000000B11 0000000000000000 0000000000000001 read
000000000000001B 0000000000000427 0000000000000000 0000000000000020 read
000000000000000A 0000000000000B3D 0000000000000000 0000000000000001
write 000000000000001C 0000000000000B11 0000000000000000
0000000000000001 read 000000000000001B 0000000000000B3D 0000000000000000
0000000000000001 write 000000000000001C 0000000000000B11
0000000000000000 0000000000000001 read 000000000000001B 0000000000000B3D
0000000000000000 0000000000000001 write 000000000000001C
0000000000000B11 0000000000000000 0000000000000001 read 000000000000001B
...
.PP
^C
.PP
#
.SH The \-p option can be used to filter on a PID, which is filtered
in\-kernel.
.PP
Here \-t option is used to print timestamps:
.PP
# ./strace.ebpf \-l hex \-tp 2833
.PP
\&./strace.ebpf \-l hex \-tp 2833 PID TIME(usec) ERR RES SYSCALL ARG1
ARG2 ARG3 AUX_DATA
.PP
0000000000000B11 0000000000000000 0000000000000000 0000000000000001 read
000000000000001B
.PP
0000000000000B11 0000000000004047 0000000000000000 0000000000000001 read
000000000000001B
.PP
0000000000000B11 0000000000008347 0000000000000000 0000000000000001 read
000000000000001B
.PP
0000000000000B11 000000000000C120 0000000000000000 0000000000000001 read
000000000000001B
.PP
0000000000000B11 000000000000C287 0000000000000000 0000000000000001 read
000000000000001B
.PP
0000000000000B11 000000000000C508 0000000000000000 0000000000000001 read
000000000000001B
.PP
0000000000000B11 0000000000010548 0000000000000000 0000000000000001 read
000000000000001B
.PP
0000000000000B11 00000000000144A4 0000000000000000 0000000000000001 read
000000000000001B
.PP
\&...
.PP
^C
.PP
#
.SH The \-X option only prints failed syscalls:
.PP
# ./strace.ebpf \-l hex \-X mkdir .
.PP
\&./strace.ebpf \-l hex \-X mkdir .
.PP
PID ERR RES SYSCALL ARG1 ARG2 ARG3 AUX_DATA
.PP
000000000000441A 0000000000000002 FFFFFFFFFFFFFFFF open
/usr/share/locale/en_US/LC_MESSAGES/coreutils.mo mkdir
.PP
000000000000441A 0000000000000002 FFFFFFFFFFFFFFFF open
/usr/share/locale/en/LC_MESSAGES/coreutils.mo mkdir
.PP
000000000000441A 0000000000000002 FFFFFFFFFFFFFFFF open
/usr/share/locale\-langpack/en_US/LC_MESSAGES/coreutils.mo mkdir
.PP
000000000000441A 0000000000000002 FFFFFFFFFFFFFFFF open
/usr/lib/x86_64\-linux\-gnu/charset.alias mkdir
.PP
000000000000441A 0000000000000002 FFFFFFFFFFFFFFFF open
/usr/share/locale/en_US/LC_MESSAGES/libc.mo mkdir
.PP
000000000000441A 0000000000000002 FFFFFFFFFFFFFFFF open
/usr/share/locale/en/LC_MESSAGES/libc.mo mkdir
.PP
000000000000441A 0000000000000002 FFFFFFFFFFFFFFFF open
/usr/share/locale\-langpack/en_US/LC_MESSAGES/libc.mo mkdir
.PP
000000000000441A 0000000000000002 FFFFFFFFFFFFFFFF open
/usr/share/locale\-langpack/en/LC_MESSAGES/libc.mo mkdir
.PP
#
.PP
The ERR column is the system error number.
Error number 2 is ENOENT: no such file or directory.
.SH SEE ALSO
.PP
\f[B]strace\f[](1), \f[B]bpf\f[](2), \f[B]<http://pmem.io>\f[].
.PP
Also Documentation/networking/filter.txt in kernel sources.
